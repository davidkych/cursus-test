# .github/workflows/static-web.yml
name: Frontend Static Web App

on:
  # invoked from deploy.yml
  workflow_call:
    inputs:
      RG:                 { required: true, type: string }
      STATIC_SITE_NAME:   { required: true, type: string }
    secrets:
      AZURE_CREDENTIALS:  { required: true }

permissions:
  contents: read
  id-token: write          # OIDC for azure/login

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      RG:               ${{ inputs.RG }}
      STATIC_SITE_NAME: ${{ inputs.STATIC_SITE_NAME }}

    steps:
      - uses: actions/checkout@v3

      # ── Azure login via the existing service-principal secret ───────────────
      - uses: azure/login@v1
        with:
          auth-type: SERVICE_PRINCIPAL
          creds:     ${{ secrets.AZURE_CREDENTIALS }}

      # ── Build the Vue front-end ────────────────────────────────────────────
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Build
        working-directory: frontend
        run: npm run build

      # ── Fetch a short-lived deployment token directly from Azure ───────────
      - name: Obtain Static Web App deployment token
        id: swa_token
        uses: azure/CLI@v2
        with:
          inlineScript: |
            set -eo pipefail
            TOKEN=$(az staticwebapp secrets list \
                      --name "${STATIC_SITE_NAME}" \
                      --resource-group "${RG}" \
                      --query properties.apiKey -o tsv)
            echo "::add-mask::$TOKEN"
            echo "TOKEN=$TOKEN" >> $GITHUB_OUTPUT

      # ── Deploy ─────────────────────────────────────────────────────────────
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1          # pinned
        with:
          azure_static_web_apps_api_token: ${{ steps.swa_token.outputs.TOKEN }}
          repo_token:                      ${{ secrets.GITHUB_TOKEN }}
          action: upload
          app_location:    frontend
          output_location: dist
