# .github/workflows/web-app.yml
name: Web-App Reusable

on:
  workflow_call:
    inputs:
      RG:          { required: true, type: string }
      APP:         { required: true, type: string }
      TIMEOUT:     { required: true, type: number }
      COSMOS:      { required: true, type: string }
      SCHED_FUNC:  { required: true, type: string }
    secrets:
      AZURE_CREDENTIALS: { required: true }

  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '!src/scheduler_fapp/**'

jobs:
  deploy-web-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: pip

      - name: Vendor deps
        run: |
          pip install --upgrade pip
          pip install --only-binary=:all: --prefer-binary --no-cache-dir \
            -r src/requirements.txt --target src/.python_packages

      - uses: azure/login@v1
        with:
          auth-type: SERVICE_PRINCIPAL
          creds:     ${{ secrets.AZURE_CREDENTIALS }}

      # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      # FIX: inputs promoted to env ‚Üí no more empty CLI arguments
      # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      - name: Grant Cosmos Data Contributor to Web-App MSI
        env:
          RG:     ${{ inputs.RG }}
          APP:    ${{ inputs.APP }}
          COSMOS: ${{ inputs.COSMOS }}
        run: |
          set -eo pipefail
          [[ -z "$RG" || -z "$APP" || -z "$COSMOS" ]] && {
            echo "RG, APP or COSMOS not set" >&2; exit 1; }

          principalId=$(az webapp identity show \
              --resource-group "$RG" \
              --name           "$APP" \
              --query principalId -o tsv)

          roleId=$(az cosmosdb sql role definition list \
              --resource-group "$RG" \
              --account-name   "$COSMOS" \
              --query "[?roleName=='Cosmos DB Built-in Data Contributor'].id" -o tsv)

          az cosmosdb sql role assignment create \
              --resource-group  "$RG" \
              --account-name    "$COSMOS" \
              --principal-id    "$principalId" \
              --role-definition-id "$roleId" \
              --scope "/" || true

          echo "‚úÖ web-app MSI granted data-plane role"

      - name: Configure Web-App settings
        run: |
          az webapp config appsettings set -g ${{ inputs.RG }} -n ${{ inputs.APP }} --settings \
            WEBSITE_RUN_FROM_PACKAGE=0 \
            SCM_DO_BUILD_DURING_DEPLOYMENT=false \
            WEBSITES_PORT=8000 \
            PYTHONPATH="/home/site/wwwroot:/home/site/wwwroot/.python_packages" \
            WEBSITES_CONTAINER_START_TIME_LIMIT=${{ inputs.TIMEOUT }} \
            WEBSITES_STARTUP_COMMAND="gunicorn --log-level info --worker-class uvicorn.workers.UvicornWorker --workers 2 --bind 0.0.0.0:8000 main:app" \
            WEBSITES_LOG_MESSAGE_LEVEL=Verbose \
            SCM_LOGSTREAM_TIMEOUT=240
          az webapp config set -g ${{ inputs.RG }} -n ${{ inputs.APP }} --always-on true
          az webapp log config -g ${{ inputs.RG }} -n ${{ inputs.APP }} \
            --application-logging filesystem \
            --detailed-error-messages true \
            --failed-request-tracing true

      - name: ZIP-deploy FastAPI web-app
        shell: bash
        run: |
          set -eo pipefail
          cd src && zip -qr ../app.zip . && cd ..
          echo "‚è≥ initial warm-up 60 s ‚Ä¶"; sleep 60

          success=false
          for attempt in 1 2; do
            echo "üöÄ ZIP-deploy attempt $attempt"
            az webapp deploy -g ${{ inputs.RG }} -n ${{ inputs.APP }} --src-path app.zip --type zip --timeout 200 || true
            echo "üì° streaming container log ‚Ä¶"
            timeout 90s az webapp log tail -g ${{ inputs.RG }} -n ${{ inputs.APP }} | tee live.log || true
            sleep 10

            code=$(curl -s -o /dev/null -w '%{http_code}' "https://${{ inputs.APP }}.azurewebsites.net/healthz" || true)
            if [[ "$code" == "200" ]]; then
              echo "‚úÖ healthy"
              success=true
              break
            fi
            echo "‚ö† unhealthy (HTTP $code) ‚Äì backing off"
            sleep $((attempt*45))
          done

          $success || { echo "üí• web-app deploy failed"; exit 1; }

      - name: Restart web-app and wait health
        shell: bash
        run: |
          set -eo pipefail
          az webapp restart -g ${{ inputs.RG }} -n ${{ inputs.APP }}
          for i in {1..12}; do
            code=$(curl -s -o /dev/null -w '%{http_code}' "https://${{ inputs.APP }}.azurewebsites.net/healthz" || true)
            [[ "$code" == "200" ]] && exit 0
            sleep 5
          done
          echo "üí• restart health check failed"
          exit 1

      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: webapp-log
          path: live.log
