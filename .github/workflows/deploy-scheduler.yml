# .github/workflows/deploy-scheduler.yml
name: Deploy Scheduler

on:
  workflow_dispatch:
    inputs:
      RG:
        description: 'Resource group'
        required: true
        default: 'cursus-test-rg'
      APP:
        description: 'App name'
        required: true
        default: 'cursus-test-app'
      COSMOS:
        description: 'Cosmos account name'
        required: true
      SCHED_FUNC:
        description: 'Scheduler function name'
        required: true
  workflow_call:
    inputs:
      RG:
        required: true
        type: string
      APP:
        required: true
        type: string
      COSMOS:
        required: true
        type: string
      SCHED_FUNC:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  RG:        ${{ inputs.RG || env.RG }}
  APP:       ${{ inputs.APP || env.APP }}
  COSMOS:    ${{ inputs.COSMOS || env.COSMOS }}
  SCHED_FUNC:${{ inputs.SCHED_FUNC || env.SCHED_FUNC }}

jobs:
  deploy_scheduler:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: pip

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Vendor scheduler deps & package ZIP
        run: |
          set -eo pipefail
          pushd src/scheduler_fapp
          python -m pip install --upgrade pip
          python -m pip install --no-cache-dir -r requirements.txt \
                                   --target .python_packages/lib/site-packages
          zip -qr ../../sched.zip . .python_packages
          popd
          echo "ðŸ“¦ scheduler zip size: $(du -h sched.zip | cut -f1)"

      - name: ZIP-deploy scheduler Function-App
        run: |
          set -eo pipefail
          for attempt in 1 2 3; do
            echo "ðŸš€ ZIP deploy attempt $attempt"
            if az functionapp deployment source config-zip \
                  -g $RG -n $SCHED_FUNC --src sched.zip --timeout 240; then
                echo "âœ… succeeded"
                break
            fi
            echo "âš  backing off $((attempt*30))s"
            sleep $((attempt*30))
          done
          status=$(az functionapp show -g $RG -n $SCHED_FUNC --query state -o tsv)
          [[ "$status" == "Running" ]] || { echo "ðŸ’¥ failed to start"; exit 1; }

      - name: Verify scheduler health endpoint
        run: |
          set -eo pipefail
          url="https://$SCHED_FUNC.azurewebsites.net/api/healthz"
          for i in {1..10}; do
            code=$(curl -s -o /tmp/healthz.json -w '%{http_code}' "$url" || true)
            [[ "$code" == "200" ]] && { cat /tmp/healthz.json || true; exit 0; }
            sleep 15
          done
          echo "ðŸ’¥ health check failed"; exit 1

      - name: Grant Cosmos role (scheduler MSI)
        run: |
          set -eo pipefail
          principalId=$(az webapp identity show -g $RG -n $SCHED_FUNC --query principalId -o tsv)
          roleId=$(az cosmosdb sql role definition list -g $RG --account-name $COSMOS \
                   --query "[?roleName=='Cosmos DB Built-in Data Contributor'].id" -o tsv)
          az cosmosdb sql role assignment create -g $RG --account-name $COSMOS \
            --principal-id $principalId \
            --role-definition-id $roleId \
            --scope "/" || true
          echo "âœ… scheduler MSI granted data-plane role"

      - name: Update web-app with scheduler settings
        run: |
          set -eo pipefail
          sched_base="https://$SCHED_FUNC.azurewebsites.net"
          az webapp config appsettings set \
            -g $RG -n $APP --settings \
            SCHEDULER_BASE_URL=$sched_base \
            SCHEDULER_FUNCTION_NAME=$SCHED_FUNC \
            SCHEDULER_MGMT_KEY=""
