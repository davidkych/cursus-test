# .github/workflows/deploy.yml
name: Azure Deployment (Test)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  # ──────────────────────────── detect ────────────────────────────
  detect:
    name: Detect changed territories
    runs-on: ubuntu-latest
    outputs:
      gh:        ${{ steps.changes.outputs.gh }}
      infra:     ${{ steps.changes.outputs.infra }}
      scheduler: ${{ steps.changes.outputs.scheduler }}
      staticweb: ${{ steps.changes.outputs.staticweb }}
      webapp:    ${{ steps.changes.outputs.webapp }}
    steps:
      - uses: actions/checkout@v4

      - id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            gh:
              - '.github/**'
            infra:
              - 'infra/**'
            scheduler:
              - 'src/scheduler_fapp/**'
            staticweb:
              - 'frontend/**'
            webapp:
              - 'src/**'
              - '!src/scheduler_fapp/**'

      - name: Summary
        run: |
          echo "gh:        ${{ steps.changes.outputs.gh }}"
          echo "infra:     ${{ steps.changes.outputs.infra }}"
          echo "scheduler: ${{ steps.changes.outputs.scheduler }}"
          echo "staticweb: ${{ steps.changes.outputs.staticweb }}"
          echo "webapp:    ${{ steps.changes.outputs.webapp }}"

  # ─────────────────────── provision_infra ────────────────────────
  provision_infra:
    name: Provision infra (when GH or infra changed)
    needs: detect
    if: ${{ needs.detect.outputs.gh == 'true' || needs.detect.outputs.infra == 'true' }}
    uses: ./.github/workflows/infra.yml
    with:
      PREFIX:   ${{ vars.PREFIX }}
      LOCATION: ${{ vars.LOCATION }}
      PLAN_SKU: ${{ vars.PLAN_SKU }}
      TIMEOUT:  ${{ vars.TIMEOUT }}
    secrets:
      AZURE_CREDENTIALS:     ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # ─────────────────────── discover_infra ─────────────────────────
  discover_infra:
    name: Discover existing infra (when infra unchanged)
    needs: detect
    if: ${{ needs.detect.outputs.gh != 'true' && needs.detect.outputs.infra != 'true' }}
    runs-on: ubuntu-latest
    outputs:
      rg:          ${{ steps.out.outputs.rg }}
      app:         ${{ steps.out.outputs.app }}
      cosmos:      ${{ steps.out.outputs.cosmos }}
      sched_func:  ${{ steps.out.outputs.sched_func }}
      static_site: ${{ steps.out.outputs.static_site }}
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v1
        with:
          auth-type: SERVICE_PRINCIPAL
          creds:     ${{ secrets.AZURE_CREDENTIALS }}

      - id: out
        name: Query Azure for resource names
        shell: bash
        run: |
          set -eo pipefail
          PREFIX="${{ vars.PREFIX }}"
          RG="${PREFIX}-rg"

          APP=$(az webapp list -g "$RG" --query "[0].name" -o tsv || true)
          COSMOS=$(az cosmosdb list -g "$RG" --query "[0].name" -o tsv || true)
          SCHED=$(az functionapp list -g "$RG" --query "[0].name" -o tsv || true)
          STATIC=$(az staticwebapp list -g "$RG" --query "[0].name" -o tsv || true)

          echo "rg=$RG"            >> "$GITHUB_OUTPUT"
          echo "app=$APP"          >> "$GITHUB_OUTPUT"
          echo "cosmos=$COSMOS"    >> "$GITHUB_OUTPUT"
          echo "sched_func=$SCHED" >> "$GITHUB_OUTPUT"
          echo "static_site=$STATIC" >> "$GITHUB_OUTPUT"

          echo "Resolved: rg=$RG, app=$APP, cosmos=$COSMOS, sched_func=$SCHED, static_site=$STATIC"

  # ────────────────────────── web-app ─────────────────────────────
  web_app:
    name: Deploy Web App
    needs: [detect, provision_infra, discover_infra]
    if: ${{ always() && (needs.detect.outputs.gh == 'true' || needs.detect.outputs.infra == 'true' || needs.detect.outputs.webapp == 'true') }}
    uses: ./.github/workflows/web-app.yml
    with:
      RG:         ${{ needs.provision_infra.outputs.rg          || needs.discover_infra.outputs.rg }}
      APP:        ${{ needs.provision_infra.outputs.app         || needs.discover_infra.outputs.app }}
      TIMEOUT:    ${{ vars.TIMEOUT }}
      COSMOS:     ${{ needs.provision_infra.outputs.cosmos      || needs.discover_infra.outputs.cosmos }}
      SCHED_FUNC: ${{ needs.provision_infra.outputs.sched_func  || needs.discover_infra.outputs.sched_func }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      JWT_SECRET:        ${{ secrets.JWT_SECRET }}

  # ───────────────────────── scheduler ────────────────────────────
  scheduler:
    name: Deploy Scheduler (Function App)
    needs: [detect, provision_infra, discover_infra]
    if: ${{ always() && (needs.detect.outputs.gh == 'true' || needs.detect.outputs.infra == 'true' || needs.detect.outputs.scheduler == 'true') }}
    uses: ./.github/workflows/scheduler.yml
    with:
      RG:         ${{ needs.provision_infra.outputs.rg          || needs.discover_infra.outputs.rg }}
      APP:        ${{ needs.provision_infra.outputs.app         || needs.discover_infra.outputs.app }}
      SCHED_FUNC: ${{ needs.provision_infra.outputs.sched_func  || needs.discover_infra.outputs.sched_func }}
      COSMOS:     ${{ needs.provision_infra.outputs.cosmos      || needs.discover_infra.outputs.cosmos }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  # ───────────────────────── static-web ───────────────────────────
  static_web:
    name: Deploy Static Web (Frontend)
    needs: [detect, provision_infra, discover_infra]
    if: ${{ always() && (needs.detect.outputs.gh == 'true' || needs.detect.outputs.infra == 'true' || needs.detect.outputs.staticweb == 'true') }}
    uses: ./.github/workflows/static-web.yml
    with:
      RG:               ${{ needs.provision_infra.outputs.rg          || needs.discover_infra.outputs.rg }}
      STATIC_SITE_NAME: ${{ needs.provision_infra.outputs.static_site || needs.discover_infra.outputs.static_site }}
      APP:              ${{ needs.provision_infra.outputs.app         || needs.discover_infra.outputs.app }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
